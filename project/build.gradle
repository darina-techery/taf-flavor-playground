apply plugin: 'net.ltgt.apt' // plugin for generation java code
apply plugin: 'java'
apply plugin: 'idea'

repositories {
    mavenCentral()
    maven { url 'https://plugins.gradle.org/m2' }
    maven { url 'http://artifactory.techery.io:8081/artifactory/worldventures' }
    maven { url 'https://jitpack.io' }
}

sourceSets {

    main {
        java.srcDir "${project.buildDir}/generated/source/apt/${sourceSet.name}"
    }
}

configurations {
    agent
}

dependencies {
    // generate Steps - Actions structure using custom lib
    apt files('libs/annotation-processing-1.2-all.jar')
    // dagger dependencies
    compile "com.google.dagger:dagger:${daggerVersion}"
    apt "com.google.dagger:dagger-compiler:${daggerVersion}"
    agent "org.aspectj:aspectjweaver:${aspectjVersion}"

    compile "ru.yandex.qatools.allure:allure-testng-adaptor:${allureVersion}"
    compile 'io.appium:java-client:5.0.0-BETA9'
    compile "ru.yandex.qatools.ashot:ashot:1.5.2"
    compile "cglib:cglib:3.2.5"
    //REST client
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    //Hermet stubs
    compile 'org.mbtest.javabank:javabank-core:0.4.10'
    //Logging framework
    compile 'org.apache.logging.log4j:log4j-api:2.8.1'
    compile 'org.apache.logging.log4j:log4j-core:2.8.1'
    //Nullable annotation and static code analysis
    compile 'com.google.code.findbugs:jsr305:3.0.2'
    //Additional language tools from Apache
    compile 'org.apache.commons:commons-lang3:3.5'
    //Model for API
    compile 'com.worldventures.dreamtrips:api-monolith:3.2.0-DEV-SNAPSHOT'
    //parse HTML to text
    compile 'org.jsoup:jsoup:1.10.3'

    testCompile "org.hamcrest:java-hamcrest:2.0.0.0"
    testCompile 'org.testng:testng:6.1.1'
    testCompile "ru.yandex.qatools.allure:allure-testng-adaptor:${allureVersion}"
}

test.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}

test {
    useTestNG() {
        testLogging.showStandardStreams = true
        String suiteName
        if (System.getProperty("suite") != null) {
            suiteName = 'src/test/resources/suites/' + System.getProperty("suite")
        } else {
            suiteName = 'src/test/resources/suites/suite.xml'
        }
        suites suiteName
        println("Executing TestNG suite "+suiteName)
        if (System.getProperty("groups") != null) {
            includeGroups System.getProperty("groups")
        }
        if (System.getProperty("excludeGroups") != null) {
            excludeGroups System.getProperty("excludeGroups")
        }
        afterTest { desc, result ->
            println "Executed test ${desc.name} [${desc.className}] with result: ${result.resultType}"
        }
    }

}